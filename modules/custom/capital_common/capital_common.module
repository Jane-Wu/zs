<?php

use \Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_theme().
 */
function capital_common_get_rest_api($url, $headers = array()) {
  $ch = curl_init();
  curl_setopt($ch, CURLOPT_URL, $url);
  curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($ch, CURLOPT_REFERER, "capital-dev");
  curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);
  $body = curl_exec($ch);
  curl_close($ch);

  if($body == null){
    \Drupal::logger('capital-rest')->notice('No return, invalid url ' . print_r($url, true));
  }

  return json_decode($body);
}
function capital_common_get_rest_custom_search($key, $orterms = null, $sort, $from_trusted) {
  if( empty($key)){
    return;
  }
  $encoded_key = strpos($key, ' ') !== false? implode('+', array_map('_capital_common_wrap_search_key', explode(' ', $key))): '"' . urlencode($key) . '"';
  $encoded_key = implode('+', array_map('_capital_common_wrap_search_key', explode(' ', $key)));
  $config = \Drupal::config('capital_news.settings');
  if($config->get('search.api_pool') == null ){
    $api_pool = [
      [
        'trusted' => [
          'cx_token' => '003694133148730748554:kuvoapkccge',
          'key_token'  => 'AIzaSyAppfuBlfh65dfelZ4jtW7oYaWu41y1z1E',
        ],
        'clues' => [
          'cx_token' => '003694133148730748554:5mzc31ouqgo',
          'key_token'  => 'AIzaSyAppfuBlfh65dfelZ4jtW7oYaWu41y1z1E',
        ],
      ],
      [
        'trusted' => [
          'cx_token' => '004400752527919370638:64owq-rlmuw',
          'key_token'  => 'AIzaSyB406FpOxPYJFYVdNambqiHCAPexkBaqJE',
        ],
        'clues' => [
          'cx_token' => '004400752527919370638:m5x7nlkusq8',
          'key_token'  => 'AIzaSyB406FpOxPYJFYVdNambqiHCAPexkBaqJE',
        ],
      ],
      [
        'trusted' => [
          'cx_token' => '018285748448364676852:x9egru9jrj0',
          'key_token'  => 'AIzaSyB4LApwAusy_M7FyS7nWkjX3hf5zO0W4AA',
        ],
        'clues' => [
          'cx_token' => '018285748448364676852:oitoamdpzay',
          'key_token'  => 'AIzaSyB4LApwAusy_M7FyS7nWkjX3hf5zO0W4AA',
        ],
      ],
    ];
    \Drupal::service('config.factory')->getEditable('capital_news.settings')->set('search.api_pool', $api_pool)->save();
  } else {
    $api_pool = $config->get('search.api_pool');
  }

  $origin = $from_trusted? 'trusted': 'clues';

  $api_index = $config->get('search.api_index') == null ? 0: $config->get('search.api_index');
  $url = 'https://www.googleapis.com/customsearch/v1?key=key_token&cx=cx_token&filter=1&dateRestrict=d1&q=' . $encoded_key;
  if($sort){
    $url = $url . '&sort=' . $sort;
  }
  if($orterms){
    $url = $url . '&orTerms=' . (strpos($orterms, ' ') !== false? implode('+', array_map('_capital_common_wrap_search_key', explode(' ', $orterms))): '"' . urlencode($orterms) . '"');
  }
  $full_url = str_replace(array_keys($api_pool[$api_index][$origin]), array_values($api_pool[$api_index][$origin]), $url);
  $results = capital_common_get_rest_api($full_url);
  if(isset($results->error)){
    if($results->error->code == 403){
      $next_index = $api_index + 1 == count($api_pool)? 0: $api_index + 1;
      $full_url = str_replace(array_keys($api_pool[$next_index][$origin]), array_values($api_pool[$next_index][$origin]), $url);
      $results = capital_common_get_rest_api($full_url);
      \Drupal::service('config.factory')->getEditable('capital_news.settings')->set('search.api_index', $next_index)->save();

      if(isset($results->error)){
        \Drupal::logger('capital-rest')->error(($results->error->code == 403? 'Meet Google API limits!' : 'Error ') . print_r($results, true));
      }
    } else{
      \Drupal::logger('capital-rest')->error('Error ' . print_r($results, true) . $full_url);
      $results = [];
    }
  }
  \Drupal::logger('capital-google')->info( print_r($key . ' ' . $full_url, true));
  if(!isset($results->items) || count($results->items) == 0){
    \Drupal::logger('capital-google-no-result')->info( print_r($key . ' ' . $full_url, true));
  }
  return $results;
}
function capital_common_get_wechat_search($key){
  if( empty($key)){
    return;
  }
  $encoded_key = strpos($key, ' ') !== false? implode('+', array_map('_capital_common_wrap_search_key', explode(' ', $key))): '"' . urlencode($key) . '"';
  $encoded_key = implode('+', array_map('_capital_common_wrap_search_key', explode(' ', $key)));
  $url = "http://52.78.7.61:8088/key-day/" . $encoded_key;
  $results = capital_common_get_rest_api($url);
  \Drupal::logger('capital-wechat')->info( print_r($key . ' ' . $url, true));
  if(count($results) == 0 || isset($results[0]->error)){
    \Drupal::logger('capital-wechat-no-result')->info( print_r($key . ' ' . $url, true));
    $results = [];
  }

  return $results;
}
function _capital_common_wrap_search_key($key){
  return '"' . urlencode($key) . '"';
}
function capital_common_get_wechat_official_search($key) {
  if( empty($key)){
    return;
  }
  $url = "http://52.78.7.61:8088/account/" . urlencode($key);
  $results = capital_common_get_rest_api($url);
  \Drupal::logger('capital-wechat-official')->info( print_r($key . ' ' . $url, true));
  if(count($results) == 0 || isset($results[0]->error)){
    \Drupal::logger('capital-wechat-official-no-result')->info( print_r($key . ' ' . $url, true));
    $results = [];
  }
  return $results;
}

/**
 * Update the 'field_collection' fields to sort by field specified.
 * $collection_fields: array of fields that needs to be sorted
 *   Each item in the array should be in the following format:
 *     array(
 *       'bundle' => $bundle_name, // Entity's bundle name
 *       'field_name' => $field_name, // Field to be sorted
 *       'sort_by' => $sort_by_field_name, // Field to be sorted by
 *     );
 */
function capital_common_field_collection_sort($entity, $collection_fields) {
  foreach ($collection_fields as $field_info) {
    if ($entity->getEntityTypeId() == 'node' &&
      $entity->bundle() == $field_info['bundle']) {
      $items = array();
      $field_name = $field_info['field_name'];
      $field = $entity->get($field_name)->getValue();
      foreach ($field as $key => $item) {
        if (isset($item['field_collection_item'])) {
          // Get the sort_by field and save it as the items array key
          $sort_by = $item['field_collection_item']->get($field_info['sort_by'])->getValue();
          if (!empty($sort_by)) {
            $items[$sort_by[0]['value']] = $item;
          }
          else {
            $items[] = $item;
          }
        }
      }
      // If no items available, skip saving empty value
      if (empty($items)) {
        continue;
      }

      // Sort items by specified field reverse
      krsort($items);
      $sorted_items = array();
      foreach ($items as $key => $sorted_item) {
        $sorted_items[] = $sorted_item;
      }
      $entity->get($field_name)->setValue($sorted_items);
    }
  }
}
