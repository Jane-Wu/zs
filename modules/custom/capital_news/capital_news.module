<?php

/**
 * Implements hook_theme().
 */
use Drupal\node\Entity\Node;
use Drupal\taxonomy\TermStorage;
use Drupal\Core\Entity;
use Drupal\Core\StreamWrapper\PublicStream;
use Drupal\relation\Entity\Relation;
use Drupal\taxonomy\Entity\Term;

define('GOOGLE_SEARCH_TID', 178);
define('WECHAT_SEARCH_TID', 180);
define('WECHAT_OFFICIAL_TID', 179);

function capital_news_cron(){
  _capital_news_get_news();
}
function _capital_news_get_news() {
  // Company News
  $nodes = getNodesByType('company');
  foreach( $nodes as $node){
    getGoogleNews($node->getTitle(), $node->id(), $node->get('field_short_name')->value);
    getWechatOfficalNews($node->get('field_wechat')->value, $node->id(), $node->getTitle());
    getWechatSearchNews($node->getTitle(), $node->id());
    getWechatSearchNews($node->get('field_short_name')->value, $node->id());
  }
  // Core staff news
  $nodes = getNodesByType('staff');
  foreach( $nodes as $node){
    getGoogleNews($node->getTitle(), $node->id());
    getWechatSearchNews($node->getTitle(), $node->id());
  }
  // Other Google Key words
  $keywords_terms = _capital_news_getTermsByVocabularies(['additional_orgs','hot_spots','oversee_spots','general_key_words']);
  foreach( $keywords_terms as $term){
    getGoogleNews($term->name);
  }
  // Other wechat accounts
  $account_terms = _capital_news_getTermsByVocabularies(['wechat_accounts']);
  foreach( $account_terms as $account_term){
    $term = Term::load($account_term->tid);
    getWechatOfficalNews($term->get('field_wechat_account')->value, null, $account_term->name);
  }
  // Other Wechat Key words
  $keywords_terms = _capital_news_getTermsByVocabularies(['wechat_keywords']);
  foreach( $keywords_terms as $term){
    getWechatSearchNews($term->name);
  }
}
function getNodesByType($type){
  $query = \Drupal::entityQuery('node')
    ->condition('status', 1)
    ->condition('type', $type);
  $nids = $query->execute();
  return \Drupal::entityManager()->getStorage('node')->loadMultiple(array_values($nids));
}
function getGoogleNews($key, $nid = null, $or_key = null){
  $json = capital_common_get_rest_custom_search($key, $or_key);
  if(isset($json->items)){
    $current_time = time();
    foreach($json->items as $result){
      $approximate_timestamp = $current_time; 
      preg_match('/^(\d+) (hours|hour|day|minutes) ago (.+)/s', $result->htmlSnippet, $matches);
      if (count($matches) != 4){
        \Drupal::logger('capital-rest')->warning('Date format unexpected, ' . print_r($result->htmlSnippet, true));
      } else{
        $approximate_timestamp = $current_time - (($matches[2] == 'hours' || $matches[2] == 'hour')? 3600 * $matches[1] : ($matches[2] == 'minutes'? 60 * $matches[1]: 86400));
      }
      $approximate_timestamp = str_replace('+00:00', '', date_format(date_timestamp_set(new DateTime("now", new DateTimeZone('Etc/GMT+0')), $approximate_timestamp), 'c'));
      $origin_tid = _capital_news_getTidByLinkAndVocabulary($result->displayLink);
      $description = isset($matches[3])? str_replace('<br>', '', $matches[3]) : $result->htmlSnippet;
      _capital_news_createNews($key, $result->htmlTitle, $description, $result->link, $approximate_timestamp, $origin_tid, GOOGLE_SEARCH_TID, $nid);
    }
  } elseif(isset($json->queries->request->totalResults) && $json->queries->request->totalResults != 0){
    \Drupal::logger('capital-rest')->error('Unexpected returned structure, ' . print_r($json, true));
  }
}
function getWechatSearchNews($key, $nid = null){
  $json = capital_common_get_wechat_search($key);
  foreach($json as $result){
    $time = (new DateTime($result->date, new DateTimeZone('Asia/Shanghai')))->setTimezone(new DateTimeZone('Etc/GMT+0'))->format("Y-m-d\TH:i:s");
    _capital_news_createNews($key, $result->title, $result->digest, $result->url, $time, null, WECHAT_SEARCH_TID, $nid);
  }
}

function getWechatOfficalNews($key, $nid = null, $display_name, $tid = null){
  $json = capital_common_get_wechat_offical_search($key);
  foreach($json as $result){
    $time = (new DateTime($result->date, new DateTimeZone('Asia/Shanghai')))->setTimezone(new DateTimeZone('Etc/GMT+0'))->format("Y-m-d\TH:i:s");
    _capital_news_createNews($display_name, $result->title, $result->digest, $result->url, $time, $tid, WECHAT_OFFICIAL_TID, $nid, true);
  }
}

function _capital_news_getTermsByVocabularies($vids){
  $terms = array();
  foreach ( $vids as $vid){
    $terms = array_merge($terms, \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid));
  }
  return $terms;
}
function _capital_news_getTidByNameAndVocabulary($name, $vid){
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree($vid);
  foreach($terms as $term){
    if($term->name == $name){
      return $term->tid;
    }
  }
}
function _capital_news_getTidByLinkAndVocabulary($link){
  $db = \Drupal::database();
  $result = $db->select('taxonomy_term__field_domain_link','l')->fields('l', ['entity_id'])->condition('bundle', 'news_orgins')->condition('field_domain_link_value', '%' .  $db->escapeLike($link) . '%', 'LIKE')->execute()->fetchAll();
  return count($result) == 1? $result[0]->entity_id: 0;  //@TODO
}
function _capital_news_createNews($key, $title, $description, $link, $timestamp, $origin_tid, $type_tid, $nid = null, $cache_flag = false){
  $db = \Drupal::database();
  $result = $db->select('node__field_news_link','l')->fields('l', ['entity_id'])->condition('field_news_link_uri', $link)->execute()->fetchAll();
  if (count($result)  > 0 ){
    $db = \Drupal::database();
    $links = $db->select('node__field_search_words','w')->fields('w', ['entity_id'])->condition('entity_id', $result[0]->entity_id)->condition('field_search_words_value', $key)->execute()->fetchAll();
    if (count($links)  == 0 ){
      $node = Node::load($result[0]->entity_id);
      $node->field_search_words[] = ['value' => $key];
      if($nid){
        $node->field_related_nids[] = $nid;
      }


      $node->save();
    }
  } elseif (count($result) == 0){

    $content = [
      'type' => 'news',
      'created' => REQUEST_TIME,
      'changed' => REQUEST_TIME,
      'uid' => 1,
      'title' => $title,
      'field_title' =>[
        'value' => $title,
        'format' => 'full_html'
      ],
      'field_description' =>[
        'value' => $description,
        'format' => 'full_html'
      ],
      'field_news_link' =>[
        'uri' => $link,
      ],
      'field_news_origin' => [$origin_tid],
      'field_search_type' =>[ $type_tid],
      'field_related_nodes' =>[$nid],
      'field_search_words' =>[
        'value' => $key,
      ],
      'field_approximate_time' =>[
        'value' => $timestamp,
      ],
    ];

    if($cache_flag){
      $content['field_content'] = [
        'value' => 'abc',
        'format' => 'full_html'
      ];
    }
    $node = Node::create($content);
    $node->save();
  }
}
function capital_news_theme() {
  $items = [
    'news_element' => [
      'render element' => 'element',
    ],
  ];
  return $items;
}

// Process the html content
function save_news_content($nid) {
  $node = Node::load($nid);
  $news_link = $node->get('field_news_link')->getValue();
  $request_url = reset($news_link)['uri'];
  if (empty($request_url)) {
    \Drupal::logger('capital_news')->error(
      'Node @nid: The field news link is empty.',
      array('@nid' => $nid)
    );
    return;
  }
  // Get the html content of the url
  $html_content = file_get_contents($request_url);

  $dom = new \DOMDocument();
  $dom->loadHTML($html_content);

  _remove_script_elements($dom);

  // @todo: save the images to s3
  //_replace_image_src($dom);

  $html_content = $dom->saveHTML();

  $node->set('field_content',
    array('value'=>$html_content, 'format'=>'full_html'));
  return $node->save();
}

// Remove all the JavaScripts elements
function _remove_script_elements($dom) {
  $scripts = $dom->getElementsByTagName('script');
  $remove = array();
  foreach($scripts as $item) {
    $remove[] = $item;
  }
  foreach ($remove as $item) {
    $item->parentNode->removeChild($item);
  }
}

// Save all the images locally and replace the image links
function _replace_image_src($dom) {
  // Get all the img tags in the document
  $elements = $dom->getElementsByTagName('img');

  if($elements->length > 0) {
    foreach($elements as $element) {
      // Get the link of the image
      $src = $element->getAttribute('src');
      if (strlen($src) > 0) {
        $local_image = _save_image_to_local($src);
        $element->setAttribute('src', $local_image);
      }
    }
  }
}

// Process the image path and save the image file
// Return the image local path
function _save_image_to_local($image_url) {
  $content = file_get_contents($image_url);
  $basename = basename(parse_url($image_url, PHP_URL_PATH));

  $file = file_save_data($content, "public://news_images/$basename", FILE_EXISTS_REPLACE);
  $local_url = PublicStream::baseUrl() ."/news_images/$basename";
  return $local_url;
}
function createRelation($relation_type, $src_type, $src_id, $target_type, $target_id){
  $endpoints = [
    [
      'entity_type' => $src_type,
      'entity_id'   => $src_id,
      'r_index'     => 0,
    ],
    [
      'entity_type' => $target_type,
      'entity_id'   => $target_id,
      'r_index'     => 1,
    ],
  ];

  $relation = Relation::create(array('relation_type' => $relation_type));
  $relation->endpoints = $endpoints;
  $relation->save();
  \Drupal::logger('capital-relation')->notice('Create relation ' . print_r($relation_type, true));
}
function removeRelation($relation_ids){
  $storage_handler = \Drupal::entityTypeManager()->getStorage('relation');
  $relations = $storage_handler->loadMultiple($relation_ids);
  $storage_handler->delete($relations);
  \Drupal::logger('capital-relation')->notice('Delete relation ' . print_r($relation_ids, true));
}
